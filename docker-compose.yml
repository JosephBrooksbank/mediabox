##
## -------------------------
## |   M E D I A B O X     |
## -------------------------
##
##
## Configuration variables for this file are taken from the .env file
##
## Have docker-compose.yml and .env in the same directory to launch the stack

version: '3.5'

services:

  # ----------------------------------------
  # DELUGEVPN
  # ----------------------------------------
  arch-delugevpn:
    image: binhex/arch-delugevpn
    container_name: delugevpn
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:8112:8112'
        - '${IP_ADDRESS}:8118:8118'
        - '${IP_ADDRESS}:58846:58846'
        - '${IP_ADDRESS}:58946:58946'
    cap_add:
        - NET_ADMIN
    environment:
        - VPN_ENABLED=yes
        - VPN_USER=${PIAUNAME}
        - VPN_PASS=${PIAPASS}
        - VPN_REMOTE=${VPN_REMOTE}
        - VPN_PORT=1198
        - VPN_PROTOCOL=udp
        - VPN_DEVICE_TYPE=tun
        - VPN_PROV=pia
        - STRONG_CERTS=no
        - ENABLE_PRIVOXY=yes
        - STRICT_PORT_FORWARD=yes
        - LAN_NETWORK=${CIDR_ADDRESS}
        - NAME_SERVERS=84.200.69.80,37.235.1.174,1.1.1.1,37.235.1.177,84.200.70.40,1.0.0.1
        - DEBUG=false
        - PUID=${PUID}
        - PGID=${PGID}
    volumes:
        - '${DLDIR}:/data'
        - '${C1}:/data/contentA'
        - '${C2}:/data/contentB'
        - './delugevpn/config:/config'
        - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # DOZZLE
  # ----------------------------------------
  dozzle:
    image: amir20/dozzle:latest
    container_name: doozle
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:9999:8080'
    volumes:
        - '/var/run/docker.sock:/var/run/docker.sock'

  # ----------------------------------------
  # FILEBROWSER
  # ----------------------------------------
  # TODO find better file browser container
  filebrowser:
    image: hurlenko/filebrowser
    container_name: filebrowser
    restart: unless-stopped
    network_mode: "bridge"
    user: "${PUID}:${PGID}"
    ports:
        - '${IP_ADDRESS}:8008:8080'
    environment:
        - FB_BASEURL=/filebrowser
    volumes:
        - './filebrowser:/config'
        - '${PWD}:/data/mediabox'
        - '${C1}:/data/contentA'
        - '${C2}:/data/contentB'
        - '${DLDIR}:/data/downloads'
        - '${MISCDIR}:/media/misc'
        - '${MOVIEDIR}:/media/movies'
        - '${MUSICDIR}:/media/music'
        - '${TVDIR}:/media/tv'

  # ----------------------------------------
  # FLARESOLVERR
  # ----------------------------------------
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    network_mode: "bridge"
    environment:
        - LOG_LEVEL=${LOG_LEVEL:-info}
        - LOG_HTML=${LOG_HTML:-false}
        - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
    ports:
        - '${IP_ADDRESS}:8191:8191'
    volumes:
        - /etc/localtime:/etc/localtime:ro
        - ./flaresolverr:/storage

  # ----------------------------------------
  # GLANCES
  # ----------------------------------------
  glances:
    image: nicolargo/glances:latest-alpine
    container_name: glances
    restart: unless-stopped
    network_mode: "bridge"
    pid: host
    ports:
        - '${IP_ADDRESS}:61208:61208'
    environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - TZ=${TZ}
        - GLANCES_OPT=-w
    volumes:
        - './glances:/config'
        - '/var/run/docker.sock:/var/run/docker.sock:ro'


  # ----------------------------------------
  # HOMER
  # ----------------------------------------
  homer:
    image: b4bz/homer:latest
    container_name: homer
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:80:8080'
    environment:
        - UID=${PUID}
        - GID=${PGID}
    volumes:
        - './homer:/www/assets'

  # ----------------------------------------
  # OVERSEERR
  # ----------------------------------------
  overseerr:
    image: lscr.io/linuxserver/overseerr
    container_name: overseerr
    restart: unless-stopped
    network_mode: "bridge"
    environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - LOG_LEVEL=info
        - TZ=${TZ}
    ports:
        - ${IP_ADDRESS}:5055:5055
    volumes:
        - ./overseerr:/config

  # ----------------------------------------
  # PLEX
  # ----------------------------------------
  plex:
    container_name: plex
    image: plexinc/pms-docker:${PMSTAG}
    restart: unless-stopped
    network_mode: "bridge"
    devices:
      - /dev/dri:/dev/dri
    ports:
        - '${IP_ADDRESS}:32400:32400/tcp'
        - '${IP_ADDRESS}:3005:3005/tcp'
        - '${IP_ADDRESS}:8324:8324/tcp'
        - '${IP_ADDRESS}:32469:32469/tcp'
        - '${IP_ADDRESS}:1900:1900/udp'
        - '${IP_ADDRESS}:32410:32410/udp'
        - '${IP_ADDRESS}:32412:32412/udp'
        - '${IP_ADDRESS}:32413:32413/udp'
        - '${IP_ADDRESS}:32414:32414/udp'
    environment:
        - ADVERTISE_IP=http://${IP_ADDRESS}:32400/
        - ALLOWED_NETWORKS=${CIDR_ADDRESS}
        - PLEX_UID=${PUID}
        - PLEX_GID=${PGID}
    hostname: ${HOSTNAME}
    volumes:
        - './plex:/config'
        - './plex/transcode:/transcode'
        - '${MISCDIR}:/data/misc'
        - '${MOVIEDIR}:/data/movies'
        - '${MUSICDIR}:/data/music'
        - '${TVDIR}:/data/tvshows'
        - '${C1}:/data/contentA'
        - '${C2}:/data/contentB'
        - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # PROWLARR
  # ----------------------------------------
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: unless-stopped
    network_mode: "bridge"
    ports:
      - '${IP_ADDRESS}:9696:9696'
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - './prowlarr:/config'


  # ----------------------------------------
  # RADARR
  # ----------------------------------------
  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:7878:7878'
    environment:
        - PUID=${PUID}
        - PGID=${PGID}
    volumes:
        - './radarr:/config'
        - '${DLDIR}/completed:/data/completed'
        - '${MOVIEDIR}:/movies'
        - '${C1}:/data/contentA'
        - '${C2}:/data/contentB'
        - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # REQUESTRR
  # ----------------------------------------
  requestrr:
    image: thomst08/requestrr
    container_name: requestrr
    restart: unless-stopped
    network_mode: "bridge"
    environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - TZ=${TZ}
    ports:
        - ${IP_ADDRESS}:4545:4545
    volumes:
        - ./requestrr:/root/config

  # ----------------------------------------
  # SONARR
  # ----------------------------------------
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:8989:8989'
    environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - TZ=${TZ}
    volumes:
        - './sonarr:/config'
        - '${DLDIR}/completed:/data/completed'
        - '${TVDIR}:/tv'
        - '${C1}:/data/contentA'
        - '${C2}:/data/contentB'
        - '/etc/localtime:/etc/localtime:ro'

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
        - './bazarr/:/config'
        - '${DLDIR}/completed:/data/completed'
        - '${TVDIR}:/tv'
        - '${C1}:/data/contentA'
        - '${C2}:/data/contentB'
        - '${MOVIEDIR}:/movies'
        - '/etc/localtime:/etc/localtime:ro'
    ports:
      - 6767:6767
    restart: unless-stopped

  # ----------------------------------------
  # SPEEDTEST
  # ----------------------------------------
  speedtest:
    image: henrywhitaker3/speedtest-tracker:dev
    container_name: speedtest
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:8765:80'
    environment:
        - TZ=${TZ}
        - PGID=${PGID}
        - PUID=${PUID}
        - OOKLA_EULA_GDPR=true
    volumes:
        - './speedtest:/config'

  # ----------------------------------------
  # TDARR
  # ----------------------------------------
  tdarr:
    image: haveagitgat/tdarr:latest
    container_name: tdarr
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:8265:8265'
        - '${IP_ADDRESS}:8266:8266'
        - '${IP_ADDRESS}:8267:8267'
    environment:
        - TZ=${TZ}
        - PUID=${PUID}
        - PGID=${PGID}
        - UMASK_SET=002
        - serverIP=${IP_ADDRESS}
        - serverPort=8266
        - webUIPort=8265
    volumes:
        - './tdarr/server:/app/server'
        - './tdarr/configs:/app/configs'
        - './tdarr/logs:/app/logs'
        - './tdarr/transcode_cache:/temp'
        - '${MISCDIR}:/data/misc'
        - '${MOVIEDIR}:/data/movies'
        - '${MUSICDIR}:/data/music'
        - '${TVDIR}:/data/tvshows'
        - '${C1}:/data/contentA'
        - '${C2}:/data/contentB'
        - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # TDARR-NODE
  # ----------------------------------------
  tdarr-node:
    image: haveagitgat/tdarr_node:latest
    container_name: tdarr-node
    restart: unless-stopped
    network_mode: service:tdarr
    environment:
        - TZ=${TZ}
        - PUID=${PUID}
        - PGID=${PGID}
        - UMASK_SET=002
        - nodeID=Node_01
        - nodeIP=${IP_ADDRESS}
        - nodePort=8267
        - serverIP=${IP_ADDRESS}
        - serverPort=8266
    volumes:
        - './tdarr/configs:/app/configs'
        - './tdarr/logs:/app/logs'
        - './tdarr/transcode_cache:/temp'
        - '${MISCDIR}:/data/misc'
        - '${MOVIEDIR}:/data/movies'
        - '${MUSICDIR}:/data/music'
        - '${TVDIR}:/data/tvshows'
        - '${C1}:/data/contentA'
        - '${C2}:/data/contentB'
        - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # TAUTULLI
  # ----------------------------------------
  tautulli:
    image: tautulli/tautulli
    container_name: tautulli
    restart: unless-stopped
    network_mode: "bridge"
    ports:
        - '${IP_ADDRESS}:8181:8181'
    environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - TZ=${TZ}
    volumes:
        - './tautulli:/config'
        - './plex/Library/Application Support/Plex Media Server/Logs:/logs:ro'
    depends_on:
        - plex

  # ----------------------------------------
  # WATCHTOWER
  # ----------------------------------------
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    network_mode: "bridge"
    hostname: '${HOSTNAME}'
    environment:
        - WATCHTOWER_CLEANUP=true
        - WATCHTOWER_SCHEDULE=0 0 */4 * * *
        - WATCHTOWER_INCLUDE_STOPPED=true
        - TZ=${TZ}
    volumes:
        - '/var/run/docker.sock:/var/run/docker.sock'


  # ----------------------------------------
  # DECLUTTARR
  # ----------------------------------------
  decluttarr:
    image: ghcr.io/manimatter/decluttarr:dev
    container_name: decluttarr
    restart: always
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - './decluttarr/:/app/config/'
      - '${DLDIR}/completed:/data/completed'
      - '${TVDIR}:/tv'
      - '${C1}:/data/contentA'
      - '${C2}:/data/contentB'
      - '${MOVIEDIR}:/movies'
      # - $DOCKERDIR/appdata/decluttarr/logs:/app/logs # Uncomment to get logs in text file, too
      # - $DOCKERDIR/appdata/decluttarr/logs:/app/logs # Uncomment to get logs in text file, too
      # - $DATADIR/media:/media # If you use detect_deletions, add the identical mount paths that you use in your sonarr/radarr instances. This may be different to this example!


  # ----------------------------------------
  # FILEFLOWS
  # ----------------------------------------
  fileflows:
    image: revenz/fileflows:stable
    container_name: fileflows
    restart: unless-stopped
    ports:
      - "19200:5000"
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./fileflow:/app/Data
      - ./temp:/temp
      - ./dockermods:/app/common
      - '${TVDIR}:/tv'
      - '${C1}:/data/contentA'
      - '${C2}:/data/contentB'
      - '${MOVIEDIR}:/movies'